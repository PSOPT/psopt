# .github/workflows/ci.yml
name: Build‑and‑test

permissions:
  contents: read      # already default, but keep explicit
  packages: read      # ✔ allows pulling private GHCR images


# ────────── TRIGGERS ──────────────────────────────────────────────
on:
  push:
    branches: [master]           # run on pushes to master
  pull_request:
    branches: [master]           # run on PRs targeting master
  workflow_dispatch:             # manual “Run workflow” button
  schedule:                      # nightly 02:30 UTC
    - cron: '30 2 * * *'
# ──────────────────────────────────────────────────────────────────

jobs:
  build:
    runs-on: ubuntu-latest       # GitHub‑hosted runner
    # Use your pre‑built Manjaro/Arch container so pacman/yay are available
    container:
      image: ghcr.io/psopt/psopt-ci:latest    # <- change if necessary

    strategy:
      matrix:
        build_type: [Release]    # add Debug if desired

    env:
      EXAMPLES:  "twoburn,low_thrust,zpm,shuttle_reentry,launch,manutec,notorious"
      REF_COSTS: "-2.367249e-01,-2.203380e-01,6.680110e+06,-3.414119e+01,-7.529661e+03,2.040420e+01,8.806615e-01"

    steps:
      - uses: actions/checkout@v4

      - name: Configure
        run: |
          cmake -B build \
          -DBUILD_EXAMPLES=ON \
          -DHEADLESS=ON \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_BUILD_RPATH_USE_ORIGIN=ON \
          -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON

      - name: Build
        run: cmake --build build -j$(nproc)
        
      - name: Install python inside CI container
        run: pacman -Sy --noconfirm python
        
      - name: Debug one executable
        run: |
         file build/examples/twoburn/twoburn
         ldd  build/examples/twoburn/twoburn || true        

      - name: Run selected examples & parse results
        env:
         LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib   # ← add this
        run: |
         python .github/scripts/run_examples.py \
         --exe-dir build/examples \
         --summary build/test_summary.json

      - name: Upload solution files & summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: psopt-logs
          path: |
            build/examples/**/psopt_solution_*.txt
            build/test_summary.json
